# This file is auto-generated by generate_tools.py. DO NOT EDIT.

import logging
from pydantic import ValidationError
from tapir_archicad_mcp.app import mcp
from tapir_archicad_mcp.context import multi_conn_instance
from multiconn_archicad.basic_types import Port

from multiconn_archicad.models.commands import (
    GenerateDocumentationParameters,
)

log = logging.getLogger()


@mcp.tool(
    name="dev_generate_documentation",
    title="GenerateDocumentation",
    description="Generates files for the documentation. Used by Tapir developers only."
)
def generate_documentation(port: int, params: GenerateDocumentationParameters) -> None:
    """
    Generates files for the documentation. Used by Tapir developers only.

    To find a valid 'port' number, use the 'tapir_discovery_list_active_archicads' tool.
    """
    log.info(f"Executing generate_documentation tool on port {port}")
    multi_conn = multi_conn_instance.get()

    target_port = Port(port)
    if target_port not in multi_conn.active:
        raise ValueError(f"Port {port} is not an active Archicad connection.")

    conn_header = multi_conn.active[target_port]

    try:

        conn_header.core.post_tapir_command(
            command="GenerateDocumentation",
            parameters=params.model_dump(mode='json')
        )
        return None

    except ValidationError as e:
        log.error(f"Validation error for GenerateDocumentation result: {e}")
        raise ValueError(f"Received an invalid response from the Archicad API: {e}")
    except Exception as e:
        log.error(f"Error executing GenerateDocumentation on port {port}: {e}")
        raise e
